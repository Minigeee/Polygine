#ifndef SHADER_POSTPROCESS_THRESHOLD_FRAG
#define SHADER_POSTPROCESS_THRESHOLD_FRAG "#version 330 core\n\n///////////////////////////////////////////////////////////////////////////////\n\nin vec2 v_texCoord;\n\nout vec4 f_color;\n\nuniform sampler2D u_texture;\nuniform float u_threshold;\nuniform float u_interval;\n\n///////////////////////////////////////////////////////////////////////////////\n\nvoid main()\n{\n    vec4 result = texture(u_texture, v_texCoord);\n    \n	const vec3 toLuma = vec3(0.299, 0.587, 0.114);\n    float brightness = dot(result.rgb, toLuma);\n\n    // If interval is zero or negative, use a hard threshold\n    if (u_interval <= 0.0f && brightness < u_threshold)\n        result.rgb = vec3(0.0f);\n\n    else if (u_interval > 0.0f)\n    {\n        // Otherwise use a smoothstep\n        float factor = smoothstep(u_threshold - u_interval, u_threshold, brightness);\n        result.rgb *= factor;\n    }\n\n    f_color = result;\n}"
#endif