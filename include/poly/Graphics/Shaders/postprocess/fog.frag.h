#ifndef SHADER_POSTPROCESS_FOG_FRAG
#define SHADER_POSTPROCESS_FOG_FRAG "#version 330 core\n\nlayout (std140) uniform Camera\n{\n    mat4 u_projView;\n    vec3 u_cameraPos;\n    float u_near;\n    float u_far;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n\nin vec2 v_texCoord;\n\nout vec4 f_color;\n\nuniform sampler2D u_color;\nuniform sampler2D u_depth;\n\nuniform mat4 u_invProjView;\n\nuniform vec3 u_fogColor;\nuniform float u_fogDensity;\nuniform float u_scatterStrength;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform bool u_applyToSkybox;\n\n\n///////////////////////////////////////////////////////////////////////////////\nvec3 getFragPos(vec2 uv, out float depth)\n{\n    depth = 2.0f * texture(u_depth, uv).r - 1.0f;\n    vec4 clipPos = vec4(2.0f * uv - 1.0f, depth, 1.0f);\n    vec4 pos = u_invProjView * clipPos;\n\n    return pos.xyz / pos.w;\n}\n\n\n///////////////////////////////////////////////////////////\nfloat phaseFunction_M(float g, float nu)\n{\n    float k = 3.0f / (8.0f * 3.1415926535f) * (1.0f - g * g) / (2.0f + g * g);\n    return k * (1.0f + nu * nu) / pow(1.0f + g * g - 2.0f * g * nu, 1.5f);\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\nvoid main()\n{\n    vec3 color = texture(u_color, v_texCoord).rgb;\n    \n    float depth = 0.0f;\n    vec3 fragPos = getFragPos(v_texCoord, depth);\n\n    if (depth < 1.0f || u_applyToSkybox)\n    {\n        vec3 viewDir = fragPos - u_cameraPos;\n        float dist = length(viewDir);\n        viewDir = normalize(viewDir);\n        \n        float nu = dot(viewDir, -u_lightDir);\n\n        float factor = pow(1.0f - u_fogDensity, dist);\n        f_color.rgb = mix(u_fogColor, color, factor);\n        \n        // Check if the sun is intersecting\n        f_color.rgb += u_lightColor * phaseFunction_M(0.8f, nu) * u_scatterStrength * (1.0f - factor);\n    }\n    else\n        f_color.rgb = color;\n\n    f_color.a = 1.0f;\n}"
#endif